Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                              ./main.o (__mulhi3)
/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
                              ./main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x234
 *(.vectors)
 .vectors       0x0000000000000000       0x14 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.durations
                0x0000000000000014       0x4e ./main.o
                0x0000000000000014                durations
 .progmem.data.frequences
                0x0000000000000062       0x4e ./main.o
                0x0000000000000062                frequences
                0x00000000000000b0                . = ALIGN (0x2)
                0x00000000000000b0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000b0        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000b0                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000b0                __ctors_start = .
 *(.ctors)
                0x00000000000000b0                __ctors_end = .
                0x00000000000000b0                __dtors_start = .
 *(.dtors)
                0x00000000000000b0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000b0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
                0x00000000000000b0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000b0        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b8        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
 *(.init9)
 *(.text)
 .text          0x00000000000000bc        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
                0x00000000000000bc                __bad_interrupt
                0x00000000000000bc                __vector_6
                0x00000000000000bc                __vector_3
                0x00000000000000bc                __vector_7
                0x00000000000000bc                __vector_5
                0x00000000000000bc                __vector_4
                0x00000000000000bc                __vector_9
                0x00000000000000bc                __vector_2
                0x00000000000000bc                __vector_8
 .text          0x00000000000000be        0x0 ./main.o
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000000000000be                . = ALIGN (0x2)
 *(.text.*)
 .text.startup.main
                0x00000000000000be       0x26 ./main.o
                0x00000000000000be                main
 .text.__vector_1
                0x00000000000000e4       0xe6 ./main.o
                0x00000000000000e4                __vector_1
 .text.libgcc.mul
                0x00000000000001ca       0x22 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                0x00000000000001ca                __mulhi3
 .text.libgcc.div
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc   0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.prologue
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.builtins
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.fmul
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.fixed
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.mul
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000001ec       0x44 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
                0x00000000000001ec                __udivmodsi4
 .text.libgcc   0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000230                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000230        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000230                exit
                0x0000000000000230                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000230        0x4 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000234                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000234
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800060                PROVIDE (__bss_end, .)
                0x0000000000000234                __data_load_start = LOADADDR (.data)
                0x0000000000000234                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800060                PROVIDE (__noinit_end, .)
                0x0000000000800060                _end = .
                0x0000000000800060                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/crttn13.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(attiny13_bell_imperial.elf elf32-avr)
LOAD linker stubs
